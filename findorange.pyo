
import sys, getopt
import os
from PIL import Image


def findorange(str):
	"function_docstring"
	

#get the size of the inputfile
#CHANGE THIS TO GET THE RIGHT INPUT FILE
	inputfile = Image.open(str)
	width, height = inputfile.size


#create the outputfile as all white, in the right size
	outputfile = Image.new( 'RGB', (width,height), "white")


	from collections import deque

	xqueue = []
	yqueue = []

#goes through picture 10 pixels at a time and if it is yellow, turns it black
#then, if it is black, it is added to the queue
#the next nested for loops go through all of the contiguous pixels and sees if they are also yellow, then they are turned black
#CHANGE VALUES SO THEY FIND ORANGE 

	for x in range(0, width, 10):
		for y in range(0, height, 10):
			r,g,b = inputfile.getpixel((x,y))
			
			if r>=90 and g <= 100 and b <= 80:
				outputfile.putpixel((x,y), 0)
				xqueue.append(x)
				yqueue.append(y)

			if xqueue and yqueue:
				a = xqueue.pop()
				b = yqueue.pop()

				for r in range (-1, 1):
					for c in range (-1,1):
						i = a + r
						j = b + c
						
						if i>0 and i<width and j>0 and j<height:

							re,gr,bl = inputfile.getpixel((i,j))
							w, m, n = outputfile.getpixel((i,j))

							if re >= 90 and gr <= 100 and bl <= 80 and w == 255 and m == 255 and n == 255:
								outputfile.putpixel((i,j), 0)
								xqueue.append(i)
								yqueue.append(j)
				
#shows the results
	#outputfile.show()

#saves a file with the result as a jpeg
	outputfile.save('binary2.jpg')


	return ["done"]



def centertube(str):
	"function_docstring"

	inputfile = Image.open(str)
	width, height = inputfile.size

	for x in range(0, width, 10):
		for y in range(0, height, 10):
			r,g,b = inputfile.getpixel((x,y))
			
			if r==0 and b==0 and g==0:
				
				if x>0 and x<(2.5*width)/6:
					print ("go left")
					return ["done"]
				if x>=(2.5*width)/6 and x<=(3.5*width)/6:
					print ("tube in center sixth, go straight")
					return ["done"]
				if x>(3.5*width)/6:
					print ("go right")
					return ["done"]


	print("it's not even in frame")

	return ["done"]


def main(argv):

	#os.system('ffmpeg -i watertest.mp4 -vf fps=1/5 frame%d.png')


	findorange('frame2.png')
	centertube('binary2.jpg')


if __name__ == "__main__":
   main(sys.argv[1:])


